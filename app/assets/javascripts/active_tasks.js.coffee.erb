do completed_tasks = ->
	$(document).ready(()->
		$.ajax({
			type: "GET",
		url: "/todo/completed_tasks/"})
	)

do set_dropdownbox_background = ->
	$(document).ready(()-> 
		priority_box = $('select#new_priority')
		priority_box.find('option[value=high], option[value=високий]').each(()-> $(this).css('background-color',"#FFE5B4"))
		priority_box.find('option[value=medium], option[value=середній]').each(()-> $(this).css('background-color',"#FFF8C6"))
		priority_box.find('option[value=low], option[value=низький]').each(()-> $(this).css('background-color',"rgba(255, 255, 233, 0.8)"))
		priority_box.change(()-> 
			priority = $(this).find('option:selected').text()
			background = switch priority 
				when 'high','високий' then "#FFE5B4"
				when 'medium', 'середній' then "#FFF8C6"
				when 'low','низький' then "rgba(255, 255, 233, 0.8)"
			$(this).css('background', background)	
		)
	)

@trigger_on_edit = trigger_on_edit = (task_id, dropdown, obj)->
	$('div#description' + task_id).attr('contenteditable','true')
	priority_field =  $('div#priority' + task_id)
	if priority_field.parent().attr('class').match(/низький|високий|середній/)	
		high = 'високий'
		medium = 'середній'
		low = 'низький'	
	else
		high = 'high'
		medium = 'medium'
		low = 'low'		
	switch priority_field.text() 
		when 'high' then h = 'selected'
		when 'високий' then h = 'selected'
		when 'medium'  then m = 'selected'
		when 'середній' then m = 'selected'
		when 'low' then l = 'selected'
		when 'низький' then l = 'selected'		
	priority_field.replaceWith('<select class="embedded">'+ "<option #{h} >" + 
		"#{high}</option>"+"<option #{m} >"+"#{medium}</option>" + 
		"<option #{l}>"+"#{low}</option></select>")	
	
	status_field =  $('div#status' + task_id)
	if status_field.parent().attr('class').match(/в процесі|активна/)	
		open = 'активна'
		inprogress = 'в процесі'
	else
		open = 'open'
		inprogress = 'in progress'	
	switch status_field.text() 
		when 'open', 'активна' then o = 'selected'
		when 'in progress', 'в процесі' then i = 'selected'
	status_field.replaceWith('<select class="embedded">'+"<option #{o}>"+"#{open}</option>" +
		"<option #{i}>"+"#{inprogress}</option></select>")
		 
	$('tr.' + task_id).removeAttr('onmouseout')
	$(obj).attr('disabled','disabled')
	$('.okay' + task_id).show()
	$("button.#{dropdown}").show()

	
@trigger_on_ok = trigger_on_ok = (obj, task_id, dropdown)->
	$('div#description' + task_id).attr('contenteditable','false')
	
	description = $('div#description' + task_id).text()
	priority = $('select :selected').slice(1,2).text()
	console.log priority
	status = $('select :selected').slice(2,3).text() 
	
	console.log description
	console.log priority
	console.log status

	$('select').slice(1,2).replaceWith('<div>' + priority + '</div>') 
	$('select').slice(1,2).replaceWith('<div>' + status + '</div>')
	
	$(obj).hide()
	$("button.#{dropdown}").hide()
	$("#for_edit_#{task_id}").find('.items').css('font-weight', 'lighter')
	$("tr.#{task_id}").attr('onmouseout', "hide_actions(#{task_id}), unbold(this)")
	$(".#{task_id}_action").removeAttr('disabled')    

	$.ajax({
		type: "POST",
		url: "/todo/update_task",
		data: { id: task_id, description: description, priority: priority, status: status }
		}).done(()-> $.easyNotification(text: 'task updated'))


@trigger_on_cancel = trigger_on_cancel = (obj, task_id)->
	injection = $(obj).attr('id') + '_span'
	
	description_id = 'description' + injection
	priority_id = 'priority'+ injection
	status_id = 'status' + injection

	desc_text = document.getElementById(description_id).textContent
	drop_text_1 = document.getElementById(priority_id).textContent
	drop_text_2 = document.getElementById(status_id).textContent

	$('div#description' + task_id).attr('contenteditable','false')
	
	$('div#description' + task_id).replaceWith('<div>'+desc_text+'</div>')
	$('select').slice(1,2).replaceWith('<div>'+drop_text_1+'</div>')
	$('select').slice(1,2).replaceWith('<div>'+drop_text_2+'</div>')
	
	$(obj).hide()
	$('.okay' + task_id).hide()
	$("#for_edit_#{task_id}").find('.items').css('font-weight', 'lighter')
	$("tr.#{task_id}").attr('onmouseout', "hide_actions(#{task_id}), unbold(this)")
	$(".#{task_id}_action").removeAttr('disabled')


@set_noneditable = set_noneditable = (obj)->  
	$(obj).attr('contenteditable','false') if $(obj).parent().attr('id') is 'description'	